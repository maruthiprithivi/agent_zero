name: Build and Publish Package

on:
  release:
    types: [created]

jobs:
  build-n-publish:
    name: Build and Publish Package
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_tag
        run: |
          # Determine raw tag name; for release events, GITHUB_REF_NAME may be set
          if [ -n "${GITHUB_REF_NAME:-}" ]; then
            RAW_TAG="${GITHUB_REF_NAME}"
          else
            RAW_TAG="${GITHUB_REF#refs/tags/}"
          fi
          # Strip leading 'v' if present (v1.2.3 â†’ 1.2.3)
          TAG="${RAW_TAG#v}"
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT

      - name: Set version in __init__.py
        run: |
          # Inject the Git tag version into __init__.py (use double quotes)
          sed -i "s/^__version__ = .*/__version__ = \"${{ steps.get_tag.outputs.TAG }}\"/" agent_zero/__init__.py

      - name: Update version in README.md
        run: |
          sed -i "s/badge\/version-[0-9]\+\.[0-9]\+\.[0-9]\+-/badge\/version-${{ steps.get_tag.outputs.TAG }}-/" README.md

      - name: Check the version
        run: |
          cat agent_zero/__init__.py

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies with UV
        run: |
          uv venv .venv
          source .venv/bin/activate
          uv pip install build setuptools wheel
          uv pip install -e . --no-deps  # Install package without dependencies first
          uv pip install "clickhouse-connect>=0.8.15"  # Install critical dep explicitly
          uv pip install .  # Install remaining deps from pyproject.toml
          uv pip install .[dev]  # Install development extras

      - name: Build package
        run: |
          source .venv/bin/activate
          # Use --no-isolation to pick up the updated __init__.py directly
          python -m build --sdist --wheel --no-isolation
          echo "Build successful"
          ls -l dist
          twine check dist/*

      - name: Publish to PyPI
        if: matrix.python-version == '3.13'
        uses: pypa/gh-action-pypi-publish@v1.12.3
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
