name: Build and Publish Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_to_testpypi:
        description: 'Publish to TestPyPI only'
        required: false
        default: false
        type: boolean

jobs:
  build-n-publish:
    name: Build and Publish Package
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # For Trusted Publishing
      contents: read

    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT

      - name: Set version in __init__.py
        run: |
          sed -i "s/^__version__ = .*/__version__ = '${{ steps.get_tag.outputs.TAG }}'/" agent_zero/__init__.py

      - name: Set version in pyproject.toml
        run: |
          sed -i "s/^version = .*/version = '${{ steps.get_tag.outputs.TAG }}'/" pyproject.toml

      - name: Update version in README.md
        run: |
          sed -i "s/badge\/version-[0-9]\+\.[0-9]\+\.[0-9]\+-/badge\/version-${{ steps.get_tag.outputs.TAG }}-/" README.md

      - name: Check the version
        run: |
          cat agent_zero/__init__.py
          echo "########################"
          cat pyproject.toml

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.5.0"

      - name: Install dependencies with UV
        run: |
          uv venv .venv
          source .venv/bin/activate
          uv pip install build twine

      - name: Build package
        run: |
          source .venv/bin/activate
          python -m build --sdist --wheel
          echo "Build successful"
          ls -l dist/
          twine check dist/*

      - name: Test installation from built package
        run: |
          uv venv test-env
          source test-env/bin/activate
          pip install dist/*.whl
          # Change directory to avoid importing from source
          cd /tmp
          python -c "import agent_zero; print(f'Successfully installed: {agent_zero.__version__}')"

      - name: Publish to TestPyPI (for testing)
        if: github.event.inputs.publish_to_testpypi == 'true' || github.event_name == 'workflow_dispatch'
        uses: pypa/gh-action-pypi-publish@v1.12.3
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

      - name: Publish to PyPI (production)
        if: github.event_name == 'release' && matrix.python-version == '3.13'
        uses: pypa/gh-action-pypi-publish@v1.12.3
